{"version":3,"sources":["webpack:///./lib/random.js","webpack:///./lib/uiKit.js","webpack:///./routes/Chat/component.js","webpack:///./routes/Chat/container.js","webpack:///./routes/Chat/index.js"],"names":["chooseElement","arrayOrString","array","index","Math","floor","Uint32Array","window","crypto","getRandomValues","length","substr","createRandomId","charsCount","alphabet","Array","from","join","createRandomString","UIKitInteractionType","MODAL_OPEN","MODAL_CLOSE","MODAL_UPDATE","ERRORS","UIKitIncomingInteractionType","BLOCK","VIEW_SUBMIT","VIEW_CLOSED","UIKitIncomingInteractionContainerType","MESSAGE","VIEW","triggersId","Map","invalidateTriggerId","id","appId","get","delete","triggerAction","triggerId","params","result","type","actionId","rid","mid","viewId","container","payload","set","setTimeout","generateTriggerId","error","Promise","race","fetch","Livechat","client","host","encodeURI","method","body","getBody","headers","credentials","token","getHeaders","then","handle","_","reject","Error","interactionType","data","has","view","includes","MODAL_ClOSE","handlePayloadUserInteraction","Chat","state","atBottom","text","emojiPickerActive","handleFilesDropTargetRef","ref","filesDropTarget","handleMessagesContainerRef","messagesContainer","base","handleScrollTo","region","props","onTop","onBottom","MessageList","SCROLL_AT_BOTTOM","setState","SCROLL_AT_TOP","handleUploadClick","event","preventDefault","browse","handleSendClick","handleSubmit","onSubmit","turnOffEmojiPicker","handleChangeText","value","onChangeText","limitTextLength","substring","toggleEmojiPickerState","handleEmojiSelect","emoji","notifyEmojiSelect","native","handleEmojiClick","render","color","title","fontColor","uid","agent","typingUsernames","avatarResolver","conversationFinishedMessage","loading","onUpload","messages","uploads","options","onChangeDepartment","onFinishChat","onRemoveUserData","onPrintTranscript","lastReadMessageId","queueInfo","resetLastAction","Screen","I18n","t","nopadding","className","createClassName","styles","FilesDropTarget","overlayed","overlayText","Content","onScrollTo","style","position","zIndex","bottom","maxWidth","left","maxHeight","showPreview","showSkinTones","sheetSize","onSelect","autoFocus","Footer","Menu","Group","Item","onClick","icon","PrintIcon","ChangeIcon","RemoveIcon","danger","FinishIcon","limit","textLength","Composer","onChange","placeholder","click","pre","width","post","Component","ChatContainer","room","connectingAgent","queueSpot","triggerQueueMessage","estimatedWaitTime","checkConnectingAgent","newConnecting","newQueueSpot","newEstimatedWaitTime","connecting","spot","estimatedWaitTimeSeconds","handleQueueMessage","handleConnectingAgentAlert","normalizeQueueAlert","checkRoom","stateRoom","_id","loadMessages","grantUser","visitor","newUser","user","guest","dispatch","grantVisitor","getRoom","previousMessages","newRoom","alert","alerts","getGreetingMessages","reason","createToken","children","timeout","push","runCallbackEventEmitter","defaultRoomParams","noMoreMessages","initRoom","parentCall","handleTop","loadMoreMessages","startTyping","throttle","username","notifyVisitorTyping","stopTypingDebounced","stopTyping","debounce","map","message","actionsVisible","getAvatar","isVisitor","name","getAvatarUrl","defaultAvatar","url","defaultUrl","msg","avatar","trim","stop","all","sendMessage","doFileUpload","file","sizeAllowed","size","uploadFile","handleUpload","files","forEach","handleSoundStop","sound","play","route","closeChat","ModalManager","confirm","success","console","loadConfig","deleteVisitor","printContent","document","getElementById","innerHTML","head","getElementsByTagName","printWindow","open","printScript","createElement","write","appendChild","close","canSwitchDepartment","allowSwitchingDepartments","departments","filter","dept","showOnRegistration","canFinishChat","undefined","canRemoveUserData","allowRemoveUserData","canPrintTranscript","transcript","showOptionsMenu","onSoundStop","oldAlerts","this","connectingAgentAlertId","constants","item","warning","hideCloseButton","ts","livechatQueueMessageId","u","Date","toISOString","upsert","componentDidMount","componentDidUpdate","prevProps","nextLastMessage","lastMessage","visible","minimized","prevMessages","prevAlerts","unreadMessagesAlertId","unread","componentWillUnmount","ChatConnector","config","settings","fileUpload","guestDefaultAvatar","forceAcceptDataProcessingConsent","showConnecting","theme","iframe","customColor","customFontColor","customIconColor","iconColor","customTitle","typing","triggerAgent","status","email","emails","address","phone","phoneNumber","customFields","description","src","canRenderMessage","isArray"],"mappings":"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","file":"route-Chat.chunk.03c3e.esm.js","sourcesContent":["const UNMISTAKABLE_CHARS = '23456789ABCDEFGHJKLMNPQRSTWXYZabcdefghijkmnopqrstuvwxyz';\n\nconst fraction = () => {\n\tconst array = new Uint32Array(1);\n\twindow.crypto.getRandomValues(array);\n\treturn array[0] * 2.3283064365386963e-10;\n};\n\nexport const chooseElement = (arrayOrString) => {\n\tconst index = Math.floor(fraction() * arrayOrString.length);\n\n\tif (typeof arrayOrString === 'string') {\n\t\treturn arrayOrString.substr(index, 1);\n\t}\n\n\treturn arrayOrString[index];\n};\n\nexport const createRandomString = (charsCount, alphabet) =>\n\tArray.from({ length: charsCount }, () => chooseElement(alphabet)).join('');\n\nexport const createRandomId = (charsCount = 17) =>\n\tcreateRandomString(charsCount, UNMISTAKABLE_CHARS);\n","import { Livechat } from '../api';\nimport { createRandomId } from './random';\n\nexport const UIKitInteractionType = {\n\tMODAL_OPEN: 'modal.open',\n\tMODAL_CLOSE: 'modal.close',\n\tMODAL_UPDATE: 'modal.update',\n\tERRORS: 'errors',\n};\n\nexport const UIKitIncomingInteractionType = {\n\tBLOCK: 'blockAction',\n\tVIEW_SUBMIT: 'viewSubmit',\n\tVIEW_CLOSED: 'viewClosed',\n};\n\nexport const UIKitIncomingInteractionContainerType = {\n\tMESSAGE: 'message',\n\tVIEW: 'view',\n};\n\nconst TRIGGER_TIMEOUT = 5000;\n\nconst triggersId = new Map();\n\n// const instances = new Map();\n\nconst invalidateTriggerId = (id) => {\n\tconst appId = triggersId.get(id);\n\ttriggersId.delete(id);\n\treturn appId;\n};\n\nconst generateTriggerId = (appId) => {\n\tconst triggerId = createRandomId();\n\ttriggersId.set(triggerId, appId);\n\tsetTimeout(invalidateTriggerId, TRIGGER_TIMEOUT, triggerId);\n\treturn triggerId;\n};\n\nconst handlePayloadUserInteraction = (type, { /* appId,*/ triggerId, ...data }) => {\n\tif (!triggersId.has(triggerId)) {\n\t\treturn;\n\t}\n\tconst appId = invalidateTriggerId(triggerId);\n\tif (!appId) {\n\t\treturn;\n\t}\n\n\tconst { view } = data;\n\tlet { viewId } = data;\n\n\tif (view && view.id) {\n\t\tviewId = view.id;\n\t}\n\n\tif (!viewId) {\n\t\treturn;\n\t}\n\n\tif ([UIKitInteractionType.ERRORS].includes(type)) {\n\t\t// events.emit(viewId, {\n\t\t// \ttype,\n\t\t// \ttriggerId,\n\t\t// \tviewId,\n\t\t// \tappId,\n\t\t// \t...data,\n\t\t// });\n\t\treturn UIKitInteractionType.ERRORS;\n\t}\n\n\tif ([UIKitInteractionType.MODAL_UPDATE].includes(type)) {\n\t\t// events.emit(viewId, {\n\t\t// \ttype,\n\t\t// \ttriggerId,\n\t\t// \tviewId,\n\t\t// \tappId,\n\t\t// \t...data,\n\t\t// });\n\t\treturn UIKitInteractionType.MODAL_UPDATE;\n\t}\n\n\tif ([UIKitInteractionType.MODAL_OPEN].includes(type)) {\n\t\t// const instance = modal.push({\n\t\t// \ttemplate: 'ModalBlock',\n\t\t// \tmodifier: 'uikit',\n\t\t// \tcloseOnEscape: false,\n\t\t// \tdata: {\n\t\t// \t\ttriggerId,\n\t\t// \t\tviewId,\n\t\t// \t\tappId,\n\t\t// \t\t...data,\n\t\t// \t},\n\t\t// });\n\t\t// instances.set(viewId, instance);\n\t\treturn UIKitInteractionType.MODAL_OPEN;\n\t}\n\n\treturn UIKitInteractionType.MODAL_ClOSE;\n};\n\nexport const triggerAction = async ({\n\tappId,\n\ttype,\n\tactionId,\n\trid,\n\tmid,\n\tviewId,\n\tcontainer,\n\tpayload,\n}) => {\n\tconst triggerId = generateTriggerId(appId);\n\n\ttry {\n\t\tconst params = {\n\t\t\ttype,\n\t\t\tactionId,\n\t\t\trid,\n\t\t\tmid,\n\t\t\tviewId,\n\t\t\tcontainer,\n\t\t\ttriggerId,\n\t\t\tpayload,\n\t\t};\n\n\t\tconst result = await Promise.race([\n\t\t\tfetch(`${ Livechat.client.host }/api/${ encodeURI(`apps/ui.interaction/${ appId }`) }`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: Livechat.client.getBody(params),\n\t\t\t\theaders: Object.assign({ 'x-visitor-token': Livechat.credentials.token }, Livechat.client.getHeaders()),\n\t\t\t}).then(Livechat.client.handle),\n\t\t\tnew Promise((_, reject) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\treject(new Error(triggerId));\n\t\t\t\t}, TRIGGER_TIMEOUT);\n\t\t\t}),\n\t\t]);\n\n\t\tconst { type: interactionType, ...data } = result;\n\n\t\treturn handlePayloadUserInteraction(interactionType, data);\n\t} catch (error) {\n\t\tinvalidateTriggerId(triggerId);\n\t\tthrow error;\n\t}\n};\n","import { Picker } from 'emoji-mart';\nimport { h, Component } from 'preact';\n\nimport { Composer, ComposerAction, ComposerActions } from '../../components/Composer';\nimport { FilesDropTarget } from '../../components/FilesDropTarget';\nimport { FooterOptions, CharCounter } from '../../components/Footer';\nimport { Menu } from '../../components/Menu';\nimport { MessageList } from '../../components/Messages';\nimport { Screen } from '../../components/Screen';\nimport { createClassName } from '../../components/helpers';\nimport I18n from '../../i18n';\nimport ChangeIcon from '../../icons/change.svg';\nimport FinishIcon from '../../icons/finish.svg';\nimport PlusIcon from '../../icons/plus.svg';\nimport PrintIcon from '../../icons/print.svg';\nimport RemoveIcon from '../../icons/remove.svg';\nimport SendIcon from '../../icons/send.svg';\nimport EmojiIcon from '../../icons/smile.svg';\nimport styles from './styles.scss';\n\nexport default class Chat extends Component {\n\tstate = {\n\t\tatBottom: true,\n\t\ttext: '',\n\t\temojiPickerActive: false,\n\t}\n\n\thandleFilesDropTargetRef = (ref) => {\n\t\tthis.filesDropTarget = ref;\n\t}\n\n\thandleMessagesContainerRef = (messagesContainer) => {\n\t\tthis.messagesContainer = messagesContainer ? messagesContainer.base : null;\n\t}\n\n\thandleScrollTo = (region) => {\n\t\tconst { onTop, onBottom } = this.props;\n\n\t\tif (region === MessageList.SCROLL_AT_BOTTOM) {\n\t\t\tthis.setState({ atBottom: true });\n\t\t\tonBottom && onBottom();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState({ atBottom: false });\n\n\t\tif (region === MessageList.SCROLL_AT_TOP) {\n\t\t\tonTop && onTop();\n\t\t}\n\t}\n\n\thandleUploadClick = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.filesDropTarget.browse();\n\t}\n\n\thandleSendClick = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.handleSubmit(this.state.text);\n\t}\n\n\thandleSubmit = (text) => {\n\t\tif (this.props.onSubmit) {\n\t\t\tthis.props.onSubmit(text);\n\t\t\tthis.setState({ text: '' });\n\t\t\tthis.turnOffEmojiPicker();\n\t\t}\n\t}\n\n\thandleChangeText = (text) => {\n\t\tlet value = text;\n\t\tconst { onChangeText, limitTextLength } = this.props;\n\t\tif (limitTextLength && limitTextLength < text.length) {\n\t\t\tvalue = value.substring(0, limitTextLength);\n\t\t}\n\t\tthis.setState({ text: value });\n\t\tonChangeText && onChangeText(value);\n\t}\n\n\ttoggleEmojiPickerState = () => {\n\t\tthis.setState({ emojiPickerActive: !this.state.emojiPickerActive });\n\t}\n\n\thandleEmojiSelect = (emoji) => {\n\t\tthis.toggleEmojiPickerState();\n\t\tthis.notifyEmojiSelect(emoji.native);\n\t}\n\n\thandleEmojiClick = () => {\n\t\tthis.turnOffEmojiPicker();\n\t}\n\n\tturnOffEmojiPicker = () => {\n\t\tif (this.state.emojiPickerActive) {\n\t\t\tthis.setState({ emojiPickerActive: !this.state.emojiPickerActive });\n\t\t}\n\t}\n\n\trender = ({\n\t\tcolor,\n\t\ttitle,\n\t\tfontColor,\n\t\tuid,\n\t\tagent,\n\t\ttypingUsernames,\n\t\tavatarResolver,\n\t\tconversationFinishedMessage,\n\t\tloading,\n\t\tonUpload,\n\t\tmessages,\n\t\tuploads = false,\n\t\toptions,\n\t\tonChangeDepartment,\n\t\tonFinishChat,\n\t\tonRemoveUserData,\n\t\tonPrintTranscript,\n\t\tlastReadMessageId,\n\t\tqueueInfo,\n\t\tlimitTextLength,\n\t\tresetLastAction,\n\t\t...props\n\t}, {\n\t\tatBottom = true,\n\t\ttext,\n\t}) => (\n\t\t<Screen\n\t\t\tcolor={color}\n\t\t\ttitle={title || I18n.t('Need help?')}\n\t\t\tfontColor={fontColor}\n\t\t\tagent={agent || null}\n\t\t\tqueueInfo={queueInfo}\n\t\t\tnopadding\n\t\t\toptions={options}\n\t\t\tonChangeDepartment={onChangeDepartment}\n\t\t\tonFinishChat={onFinishChat}\n\t\t\tonRemoveUserData={onRemoveUserData}\n\t\t\tclassName={createClassName(styles, 'chat')}\n\t\t\thandleEmojiClick={this.handleEmojiClick}\n\t\t\t{...props}\n\t\t>\n\t\t\t<FilesDropTarget\n\t\t\t\tref={this.handleFilesDropTargetRef}\n\t\t\t\toverlayed\n\t\t\t\toverlayText={I18n.t('Drop here to upload a file')}\n\t\t\t\tonUpload={onUpload}\n\t\t\t>\n\t\t\t\t<Screen.Content nopadding>\n\t\t\t\t\t<div id={'chat__messages'} className={createClassName(styles, 'chat__messages', { atBottom, loading })}>\n\t\t\t\t\t\t<MessageList\n\t\t\t\t\t\t\tref={this.handleMessagesContainerRef}\n\t\t\t\t\t\t\tavatarResolver={avatarResolver}\n\t\t\t\t\t\t\tuid={uid}\n\t\t\t\t\t\t\tmessages={messages}\n\t\t\t\t\t\t\ttypingUsernames={typingUsernames}\n\t\t\t\t\t\t\tconversationFinishedMessage={conversationFinishedMessage}\n\t\t\t\t\t\t\tlastReadMessageId={lastReadMessageId}\n\t\t\t\t\t\t\tonScrollTo={this.handleScrollTo}\n\t\t\t\t\t\t\tresetLastAction={resetLastAction}\n\t\t\t\t\t\t\thandleEmojiClick={this.handleEmojiClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{this.state.emojiPickerActive && <Picker\n\t\t\t\t\t\t\tstyle={{ position: 'absolute', zIndex: 10, bottom: 0, maxWidth: '90%', left: 20, maxHeight: '90%' }}\n\t\t\t\t\t\t\tshowPreview={false}\n\t\t\t\t\t\t\tshowSkinTones={false}\n\t\t\t\t\t\t\tsheetSize={64}\n\t\t\t\t\t\t\tonSelect={this.handleEmojiSelect}\n\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t/>}\n\t\t\t\t\t</div>\n\t\t\t\t</Screen.Content>\n\t\t\t\t<Screen.Footer\n\t\t\t\t\toptions={options ? (\n\t\t\t\t\t\t<FooterOptions>\n\t\t\t\t\t\t\t<Menu.Group>\n\t\t\t\t\t\t\t\t{onPrintTranscript && (\n\t\t\t\t\t\t\t\t\t<Menu.Item onClick={onPrintTranscript} icon={PrintIcon}>{I18n.t('Print Chat')}</Menu.Item>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{onChangeDepartment && (\n\t\t\t\t\t\t\t\t\t<Menu.Item onClick={onChangeDepartment} icon={ChangeIcon}>{I18n.t('Change department')}</Menu.Item>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{onRemoveUserData && (\n\t\t\t\t\t\t\t\t\t<Menu.Item onClick={onRemoveUserData} icon={RemoveIcon}>{I18n.t('Forget/Remove my data')}</Menu.Item>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{onFinishChat && (\n\t\t\t\t\t\t\t\t\t<Menu.Item danger onClick={onFinishChat} icon={FinishIcon}>{I18n.t('Finish this chat')}</Menu.Item>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Menu.Group>\n\t\t\t\t\t\t</FooterOptions>\n\t\t\t\t\t) : null}\n\t\t\t\t\tlimit={limitTextLength\n\t\t\t\t\t\t? <CharCounter\n\t\t\t\t\t\t\tlimitTextLength={limitTextLength}\n\t\t\t\t\t\t\ttextLength={text.length}\n\t\t\t\t\t\t/> : null}\n\t\t\t\t>\n\t\t\t\t\t<Composer onUpload={onUpload}\n\t\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t\t\tonChange={this.handleChangeText}\n\t\t\t\t\t\tplaceholder={I18n.t('Type your message here')}\n\t\t\t\t\t\tvalue={text}\n\t\t\t\t\t\tnotifyEmojiSelect={(click) => { this.notifyEmojiSelect = click; }}\n\t\t\t\t\t\thandleEmojiClick={this.handleEmojiClick}\n\t\t\t\t\t\tpre={(\n\t\t\t\t\t\t\t<ComposerActions>\n\t\t\t\t\t\t\t\t<ComposerAction onClick={this.toggleEmojiPickerState}>\n\t\t\t\t\t\t\t\t\t<EmojiIcon width={20} />\n\t\t\t\t\t\t\t\t</ComposerAction>\n\t\t\t\t\t\t\t</ComposerActions>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tpost={(\n\t\t\t\t\t\t\t<ComposerActions>\n\t\t\t\t\t\t\t\t{text.length === 0 && uploads && (\n\t\t\t\t\t\t\t\t\t<ComposerAction onClick={this.handleUploadClick}>\n\t\t\t\t\t\t\t\t\t\t<PlusIcon width={20} />\n\t\t\t\t\t\t\t\t\t</ComposerAction>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{text.length > 0 && (\n\t\t\t\t\t\t\t\t\t<ComposerAction onClick={this.handleSendClick}>\n\t\t\t\t\t\t\t\t\t\t<SendIcon width={20} />\n\t\t\t\t\t\t\t\t\t</ComposerAction>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ComposerActions>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tlimitTextLength={limitTextLength}\n\t\t\t\t\t/>\n\t\t\t\t</Screen.Footer>\n\t\t\t</FilesDropTarget>\n\t\t</Screen>\n\t)\n}\n","import { h, Component } from 'preact';\nimport { route } from 'preact-router';\n\nimport { Livechat } from '../../api';\nimport { ModalManager } from '../../components/Modal';\nimport { createToken, debounce, getAvatarUrl, canRenderMessage, throttle, upsert } from '../../components/helpers';\nimport I18n from '../../i18n';\nimport { normalizeQueueAlert } from '../../lib/api';\nimport constants from '../../lib/constants';\nimport { loadConfig } from '../../lib/main';\nimport { parentCall, runCallbackEventEmitter } from '../../lib/parentCall';\nimport { initRoom, closeChat, loadMessages, loadMoreMessages, defaultRoomParams, getGreetingMessages } from '../../lib/room';\nimport { Consumer } from '../../store';\nimport Chat from './component';\n\nexport class ChatContainer extends Component {\n\tstate = {\n\t\troom: null,\n\t\tconnectingAgent: false,\n\t\tqueueSpot: 0,\n\t\ttriggerQueueMessage: true,\n\t\testimatedWaitTime: null,\n\t}\n\n\tcheckConnectingAgent = async () => {\n\t\tconst { connecting, queueInfo } = this.props;\n\t\tconst { connectingAgent, queueSpot, estimatedWaitTime } = this.state;\n\n\t\tconst newConnecting = connecting;\n\t\tconst newQueueSpot = (queueInfo && queueInfo.spot) || 0;\n\t\tconst newEstimatedWaitTime = queueInfo && queueInfo.estimatedWaitTimeSeconds;\n\n\t\tif (newConnecting !== connectingAgent || newQueueSpot !== queueSpot || newEstimatedWaitTime !== estimatedWaitTime) {\n\t\t\tthis.state.connectingAgent = newConnecting;\n\t\t\tthis.state.queueSpot = newQueueSpot;\n\t\t\tthis.state.estimatedWaitTime = newEstimatedWaitTime;\n\t\t\tawait this.handleQueueMessage(connecting, queueInfo);\n\t\t\tawait this.handleConnectingAgentAlert(newConnecting, normalizeQueueAlert(queueInfo));\n\t\t}\n\t}\n\n\tcheckRoom = () => {\n\t\tconst { room } = this.props;\n\t\tconst { room: stateRoom } = this.state;\n\t\tif (room && (!stateRoom || room._id !== stateRoom._id)) {\n\t\t\tthis.state.room = room;\n\t\t\tsetTimeout(loadMessages, 500);\n\t\t}\n\t}\n\n\tgrantUser = async () => {\n\t\tconst { token, user, guest, dispatch } = this.props;\n\n\t\tif (user) {\n\t\t\treturn user;\n\t\t}\n\n\t\tconst visitor = { token, ...guest };\n\t\tconst newUser = await Livechat.grantVisitor({ visitor });\n\t\tawait dispatch({ user: newUser });\n\t}\n\n\tgetRoom = async () => {\n\t\tconst { alerts, dispatch, room, messages } = this.props;\n\t\tconst previousMessages = getGreetingMessages(messages);\n\n\t\tif (room) {\n\t\t\treturn room;\n\t\t}\n\n\t\tawait dispatch({ loading: true });\n\t\ttry {\n\t\t\tconst params = defaultRoomParams();\n\t\t\tconst newRoom = await Livechat.room(params);\n\t\t\tawait dispatch({ room: newRoom, messages: previousMessages, noMoreMessages: false });\n\t\t\tawait initRoom();\n\n\t\t\tparentCall('callback', 'chat-started');\n\t\t\treturn newRoom;\n\t\t} catch (error) {\n\t\t\tconst { data: { error: reason } } = error;\n\t\t\tconst alert = { id: createToken(), children: I18n.t('Error starting a new conversation: %{reason}', { reason }), error: true, timeout: 10000 };\n\t\t\tawait dispatch({ loading: false, alerts: (alerts.push(alert), alerts) });\n\n\t\t\trunCallbackEventEmitter(reason);\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\tawait dispatch({ loading: false });\n\t\t}\n\t}\n\n\thandleTop = () => {\n\t\tloadMoreMessages();\n\t}\n\n\tstartTyping = throttle(async ({ rid, username }) => {\n\t\tawait Livechat.notifyVisitorTyping(rid, username, true);\n\t\tthis.stopTypingDebounced({ rid, username });\n\t}, 4500)\n\n\tstopTyping = ({ rid, username }) => Livechat.notifyVisitorTyping(rid, username, false)\n\n\tstopTypingDebounced = debounce(this.stopTyping, 5000)\n\n\thandleChangeText = async () => {\n\t\tconst { user, room } = this.props;\n\t\tif (!(user && user.username && room && room._id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.startTyping({ rid: room._id, username: user.username });\n\t}\n\n\tresetLastAction = () => {\n\t\t// makes all actions button invisible\n\t\tconst { messages, dispatch } = this.props;\n\n\t\tconst newMessages = messages.map((message) => {\n\t\t\tif (message.actionsVisible) {\n\t\t\t\tmessage.actionsVisible = false;\n\t\t\t}\n\t\t\treturn message;\n\t\t});\n\t\tdispatch({ messages: newMessages });\n\t}\n\n\tgetAvatar = (username, isVisitor = false, name = null) => {\n\t\tif (!isVisitor || name) {\n\t\t\treturn getAvatarUrl(name || username);\n\t\t}\n\n\t\tconst { defaultAvatar } = this.props;\n\t\treturn `${ Livechat.client.host }/${ defaultAvatar.url || defaultAvatar.defaultUrl }`;\n\t}\n\n\thandleSubmit = async (msg) => {\n\t\tif (msg.trim() === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.grantUser();\n\t\tconst { _id: rid } = await this.getRoom();\n\t\tconst { alerts, dispatch, token, user } = this.props;\n\t\tconst avatar = this.getAvatar(user.username, true, user.name);\n\n\t\ttry {\n\t\t\tthis.stopTypingDebounced.stop();\n\t\t\tthis.resetLastAction();\n\t\t\tawait Promise.all([\n\t\t\t\tthis.stopTyping({ rid, username: user.username }),\n\t\t\t\tLivechat.sendMessage({ msg, token, rid, avatar }),\n\t\t\t]);\n\t\t} catch (error) {\n\t\t\tconst { data: { error: reason } } = error;\n\t\t\tconst alert = { id: createToken(), children: reason, error: true, timeout: 5000 };\n\t\t\tawait dispatch({ alerts: (alerts.push(alert), alerts) });\n\t\t}\n\t\tawait Livechat.notifyVisitorTyping(rid, user.username, false);\n\t}\n\n\tdoFileUpload = async (rid, file) => {\n\t\tconst { alerts, dispatch } = this.props;\n\n\t\ttry {\n\t\t\tawait Livechat.uploadFile({ rid, file });\n\t\t} catch (error) {\n\t\t\tconst { data: { reason, sizeAllowed } } = error;\n\n\t\t\tlet message = I18n.t('FileUpload Error');\n\t\t\tswitch (reason) {\n\t\t\t\tcase 'error-type-not-allowed':\n\t\t\t\t\tmessage = I18n.t('Media Types Not Accepted.');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'error-size-not-allowed':\n\t\t\t\t\tmessage = I18n.t('File exceeds allowed size of %{size}.', { size: sizeAllowed });\n\t\t\t}\n\n\t\t\tconst alert = { id: createToken(), children: message, error: true, timeout: 5000 };\n\t\t\tawait dispatch({ alerts: (alerts.push(alert), alerts) });\n\t\t}\n\t};\n\n\thandleUpload = async (files) => {\n\t\tawait this.grantUser();\n\t\tconst { _id: rid } = await this.getRoom();\n\n\t\tfiles.forEach((file) => this.doFileUpload(rid, file));\n\t}\n\n\thandleSoundStop = async () => {\n\t\tconst { dispatch, sound = {} } = this.props;\n\t\tawait dispatch({ sound: { ...sound, play: false } });\n\t}\n\n\tonChangeDepartment = () => {\n\t\troute('/switch-department');\n\t}\n\n\tonFinishChat = async () => {\n\t\tconst { success } = await ModalManager.confirm({\n\t\t\ttext: I18n.t('Are you sure you want to finish this chat?'),\n\t\t});\n\n\t\tif (!success) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { alerts, dispatch, room: { _id: rid } = {} } = this.props;\n\n\t\tawait dispatch({ loading: true });\n\t\ttry {\n\t\t\tif (rid) {\n\t\t\t\tawait Livechat.closeChat({ rid });\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\tconst alert = { id: createToken(), children: I18n.t('Error closing chat.'), error: true, timeout: 0 };\n\t\t\tawait dispatch({ alerts: (alerts.push(alert), alerts) });\n\t\t} finally {\n\t\t\tawait dispatch({ loading: false });\n\t\t\tawait closeChat();\n\t\t}\n\t}\n\n\tonRemoveUserData = async () => {\n\t\tconst { success } = await ModalManager.confirm({\n\t\t\ttext: I18n.t('Are you sure you want to remove all of your personal data?'),\n\t\t});\n\n\t\tif (!success) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { alerts, dispatch } = this.props;\n\n\t\tawait dispatch({ loading: true });\n\t\ttry {\n\t\t\tawait Livechat.deleteVisitor();\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\tconst alert = { id: createToken(), children: I18n.t('Error removing user data.'), error: true, timeout: 0 };\n\t\t\tawait dispatch({ alerts: (alerts.push(alert), alerts) });\n\t\t} finally {\n\t\t\tawait loadConfig();\n\t\t\tawait dispatch({ loading: false });\n\t\t\troute('/chat-finished');\n\t\t}\n\t}\n\n\tonPrintTranscript = () => {\n\t\tconst printContent = document.getElementById('chat__messages').innerHTML;\n\t\tlet head = document.getElementsByTagName('head')[0].innerHTML\n\t\tlet printWindow = window.open();\n\t\tlet printScript = printWindow.document.createElement( 'script' );\n\t\tprintScript.innerHTML = \"window.print();\";\n\t\tprintWindow.document.write(printContent);\n\t\tprintWindow.document.body.appendChild(printScript);\n\t\tprintWindow.document.head.innerHTML = head;\n\t\tprintWindow.document.close();\n\t}\n\n\tcanSwitchDepartment = () => {\n\t\tconst { allowSwitchingDepartments, departments = {} } = this.props;\n\t\treturn allowSwitchingDepartments && departments.filter((dept) => dept.showOnRegistration).length > 1;\n\t}\n\n\tcanFinishChat = () => {\n\t\tconst { room, connecting } = this.props;\n\t\treturn (room !== undefined) || connecting;\n\t}\n\n\tcanRemoveUserData = () => {\n\t\tconst { allowRemoveUserData } = this.props;\n\t\treturn allowRemoveUserData;\n\t}\n\n\tcanPrintTranscript = () => {\n\t\tconst { transcript } = this.props;\n\t\treturn transcript;\n\t}\n\n\tshowOptionsMenu = () =>\n\t\tthis.canSwitchDepartment() || this.canFinishChat() || this.canRemoveUserData()\n\n\n\tasync handleConnectingAgentAlert(connecting, message) {\n\t\tconst { alerts: oldAlerts, dispatch } = this.props;\n\t\tconst { connectingAgentAlertId } = constants;\n\t\tconst alerts = oldAlerts.filter((item) => item.id !== connectingAgentAlertId);\n\t\tif (connecting) {\n\t\t\talerts.push({\n\t\t\t\tid: connectingAgentAlertId,\n\t\t\t\tchildren: message || I18n.t('Please, wait for the next available agent..'),\n\t\t\t\twarning: true,\n\t\t\t\thideCloseButton: true,\n\t\t\t\ttimeout: 0,\n\t\t\t});\n\t\t}\n\n\t\tawait dispatch({ alerts });\n\t}\n\n\tasync handleQueueMessage(connecting, queueInfo) {\n\t\tif (!queueInfo) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { livechatQueueMessageId } = constants;\n\t\tconst { message: { text: msg, user: u } = {} } = queueInfo;\n\t\tconst { triggerQueueMessage } = this.state;\n\n\t\tconst { room } = this.props;\n\t\tif (!room || !connecting || !msg || !triggerQueueMessage) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.triggerQueueMessage = false;\n\n\t\tconst { dispatch, messages } = this.props;\n\t\tconst ts = new Date();\n\t\tconst message = { _id: livechatQueueMessageId, msg, u, ts: ts.toISOString() };\n\t\tawait dispatch({\n\t\t\tmessages: upsert(messages, message, ({ _id }) => _id === message._id, ({ ts }) => ts),\n\t\t});\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.checkConnectingAgent();\n\t\tloadMessages();\n\t}\n\n\tasync componentDidUpdate(prevProps) {\n\t\tconst { messages, visible, minimized, dispatch } = this.props;\n\t\tconst { messages: prevMessages, alerts: prevAlerts } = prevProps;\n\n\t\tif (messages && prevMessages && messages.length !== prevMessages.length && visible && !minimized) {\n\t\t\tconst nextLastMessage = messages[messages.length - 1];\n\t\t\tconst lastMessage = prevMessages[prevMessages.length - 1];\n\t\t\tif ((nextLastMessage && lastMessage && nextLastMessage._id !== lastMessage._id) || (messages.length === 1 && prevMessages.length === 0)) {\n\t\t\t\tconst newAlerts = prevAlerts.filter((item) => item.id !== constants.unreadMessagesAlertId);\n\t\t\t\tdispatch({ alerts: newAlerts, unread: null, lastReadMessageId: nextLastMessage._id });\n\t\t\t}\n\t\t}\n\n\t\tawait this.checkConnectingAgent();\n\t\tthis.checkRoom();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.handleConnectingAgentAlert(false);\n\t}\n\n\trender = ({ user, ...props }) => (\n\t\t<Chat\n\t\t\t{...props}\n\t\t\tavatarResolver={this.getAvatar}\n\t\t\tuid={user && user._id}\n\t\t\tonTop={this.handleTop}\n\t\t\tonChangeText={this.handleChangeText}\n\t\t\tonSubmit={this.handleSubmit}\n\t\t\tonUpload={this.handleUpload}\n\t\t\toptions={this.showOptionsMenu()}\n\t\t\tonChangeDepartment={(this.canSwitchDepartment() && this.onChangeDepartment) || null}\n\t\t\tonFinishChat={(this.canFinishChat() && this.onFinishChat) || null}\n\t\t\tonRemoveUserData={(this.canRemoveUserData() && this.onRemoveUserData) || null}\n\t\t\tonPrintTranscript={(this.canPrintTranscript() && this.onPrintTranscript) || null}\n\t\t\tonSoundStop={this.handleSoundStop}\n\t\t\tresetLastAction={this.resetLastAction}\n\t\t/>\n\t)\n}\n\n\nexport const ChatConnector = ({ ref, ...props }) => (\n\t<Consumer>\n\t\t{({\n\t\t\tconfig: {\n\t\t\t\tsettings: {\n\t\t\t\t\tfileUpload: uploads,\n\t\t\t\t\tguestDefaultAvatar: defaultAvatar,\n\t\t\t\t\tallowSwitchingDepartments,\n\t\t\t\t\tforceAcceptDataProcessingConsent: allowRemoveUserData,\n\t\t\t\t\tshowConnecting,\n\t\t\t\t\ttranscript,\n                    limitTextLength,\n\t\t\t\t} = {},\n\t\t\t\tmessages: {\n\t\t\t\t\tconversationFinishedMessage,\n\t\t\t\t} = {},\n\t\t\t\ttheme: {\n\t\t\t\t\tcolor,\n\t\t\t\t\ttitle,\n\t\t\t\t} = {},\n\t\t\t\tdepartments = {},\n\t\t\t},\n\t\t\tiframe: {\n\t\t\t\ttheme: {\n\t\t\t\t\tcolor: customColor,\n\t\t\t\t\tfontColor: customFontColor,\n\t\t\t\t\ticonColor: customIconColor,\n\t\t\t\t\ttitle: customTitle,\n\t\t\t\t} = {},\n\t\t\t\tguest,\n\t\t\t} = {},\n\t\t\ttoken,\n\t\t\tagent,\n\t\t\tsound,\n\t\t\tuser,\n\t\t\troom,\n\t\t\tmessages,\n\t\t\tnoMoreMessages,\n\t\t\ttyping,\n\t\t\tloading,\n\t\t\tdispatch,\n\t\t\talerts,\n\t\t\tvisible,\n\t\t\tunread,\n\t\t\tlastReadMessageId,\n\t\t\ttriggerAgent,\n\t\t\tqueueInfo,\n\t\t}) => (\n\t\t\t<ChatContainer\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t\ttheme={{\n\t\t\t\t\tcolor: customColor || color,\n\t\t\t\t\tfontColor: customFontColor,\n\t\t\t\t\ticonColor: customIconColor,\n\t\t\t\t\ttitle: customTitle,\n\t\t\t\t}}\n\t\t\t\ttitle={customTitle || title || I18n.t('Need help?')}\n\t\t\t\tsound={sound}\n\t\t\t\ttoken={token}\n\t\t\t\tuser={user}\n\t\t\t\tagent={agent ? {\n\t\t\t\t\t_id: agent._id,\n\t\t\t\t\tname: agent.name,\n\t\t\t\t\tstatus: agent.status,\n\t\t\t\t\temail: agent.emails && agent.emails[0] && agent.emails[0].address,\n\t\t\t\t\tusername: agent.username,\n\t\t\t\t\tphone: (agent.phone && agent.phone[0] && agent.phone[0].phoneNumber) || (agent.customFields && agent.customFields.phone),\n\t\t\t\t\tavatar: agent.username ? {\n\t\t\t\t\t\tdescription: agent.username,\n\t\t\t\t\t\tsrc: getAvatarUrl(agent.username),\n\t\t\t\t\t} : undefined,\n\t\t\t\t} : undefined}\n\t\t\t\troom={room}\n\t\t\t\tmessages={messages && messages.filter((message) => canRenderMessage(message))}\n\t\t\t\tnoMoreMessages={noMoreMessages}\n\t\t\t\temoji={true}\n\t\t\t\tuploads={uploads}\n\t\t\t\ttypingUsernames={Array.isArray(typing) ? typing : []}\n\t\t\t\tloading={loading}\n\t\t\t\tshowConnecting={showConnecting} // setting from server that tells if app needs to show \"connecting\" sometimes\n\t\t\t\tconnecting={!!(room && !agent && (showConnecting || queueInfo))}\n\t\t\t\tdispatch={dispatch}\n\t\t\t\tdepartments={departments}\n\t\t\t\tdefaultAvatar={defaultAvatar}\n\t\t\t\tallowSwitchingDepartments={allowSwitchingDepartments}\n\t\t\t\tconversationFinishedMessage={conversationFinishedMessage || I18n.t('Conversation finished')}\n\t\t\t\tallowRemoveUserData={allowRemoveUserData}\n\t\t\t\ttranscript={transcript}\n\t\t\t\talerts={alerts}\n\t\t\t\tvisible={visible}\n\t\t\t\tunread={unread}\n\t\t\t\tlastReadMessageId={lastReadMessageId}\n\t\t\t\tguest={guest}\n\t\t\t\ttriggerAgent={triggerAgent}\n\t\t\t\tqueueInfo={queueInfo ? {\n\t\t\t\t\tspot: queueInfo.spot,\n\t\t\t\t\testimatedWaitTimeSeconds: queueInfo.estimatedWaitTimeSeconds,\n\t\t\t\t\tmessage: queueInfo.message,\n\t\t\t\t} : undefined}\n\t\t\t\tlimitTextLength={limitTextLength}\n\t\t\t/>\n\t\t)}\n\t</Consumer>\n);\n\n\nexport default ChatConnector;\n","export { default as Chat } from './component';\nexport { ChatContainer, ChatConnector } from './container';\nexport { default } from './container';\n"],"sourceRoot":""}