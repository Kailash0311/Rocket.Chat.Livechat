{"version":3,"sources":["webpack:///./routes/ChatFinished/component.js","webpack:///./routes/ChatFinished/container.js","webpack:///./routes/ChatFinished/index.js"],"names":["defaultGreeting","I18n","t","defaultMessage","ChatFinished","handleClick","onRedirectChat","props","render","color","title","greeting","message","Screen","className","createClassName","styles","Content","ButtonGroup","Button","onClick","stack","Footer","Component","ChatFinishedContainer","handleRedirect","route","ChatFinishedConnector","ref","config","messages","conversationFinishedMessage","conversationFinishedText","theme","iframe","customColor","customFontColor","fontColor","customIconColor","iconColor"],"mappings":"qZASA,IAAMA,EAAkBC,IAAKC,EAAE,8BACzBC,EAAiBF,IAAKC,EAAE,qFAETE,E,4JACpBC,YAAc,WAAM,IACXC,EAAmB,EAAKC,MAAxBD,eACRA,GAAkBA,K,EAGnBE,OAAS,gBACRC,EADQ,EACRA,MACAC,EAFQ,EAERA,MACAC,EAHQ,EAGRA,SACAC,EAJQ,EAIRA,QAGGL,GAPK,EAMRD,e,oIANQ,oEASR,YAACO,EAAA,EAAD,GACCJ,MAAOA,EACPC,MAAOA,EACPI,UAAWC,YAAgBC,IAAQ,kBAC/BT,GAEJ,YAACM,EAAA,EAAOI,QAAR,KACC,iBAAGH,UAAWC,YAAgBC,IAAQ,4BAA6BL,GAAYX,GAC/E,iBAAGc,UAAWC,YAAgBC,IAAQ,2BAA4BJ,GAAWT,GAE7E,YAACe,EAAA,EAAD,KACC,YAACC,EAAA,EAAD,CAAQC,QAAS,EAAKf,YAAagB,OAAK,GAAGpB,IAAKC,EAAE,eAGpD,YAACW,EAAA,EAAOS,OAAR,Q,mGA7BuCC,a,uOCJnC,IAAMC,EAAb,Y,QAAA,wIACCC,eAAiB,WAChBC,YAAM,MAFR,EAKClB,OAAS,SAACD,GAAD,OACR,YAAC,EAAD,KAAkBA,EAAlB,CAAyBD,eAAgB,EAAKmB,mBANhD,S,EAAA,G,EAAA,G,6EAAA,GAA2CF,aAW9BI,EAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAQrB,E,oIAAX,mBACpC,YAAC,IAAD,MACE,oBACAsB,OADA,gBASI,GATJ,GAECC,SAC8BnB,GAH/B,aAKK,GALL,GAGEoB,4BAC0BnB,EAJ5B,EAIEoB,yBAJF,IAMCC,MACCxB,GAPF,aAQK,GARL,GAOEA,MAPF,IAUAyB,OAVA,gBAgBI,GAhBJ,GAWCD,MACQE,GAZT,aAeK,GAfL,GAYE1B,MACW2B,EAbb,EAaEC,UACWC,EAdb,EAcEC,UAdF,OAkBA,YAAC,EAAD,GACCX,IAAKA,GACDrB,EAFL,CAGC0B,MAAO,CACNxB,MAAO0B,GAAe1B,EACtB4B,UAAWD,EACXG,UAAWD,GAEZ5B,MAAOT,IAAKC,EAAE,iBACdS,SAAUA,EACVC,QAASA,SAOEe,ICxDf","file":"route-ChatFinished.chunk.55b6f.esm.js","sourcesContent":["import { h, Component } from 'preact';\n\nimport { Button } from '../../components/Button';\nimport { ButtonGroup } from '../../components/ButtonGroup';\nimport Screen from '../../components/Screen';\nimport { createClassName } from '../../components/helpers';\nimport I18n from '../../i18n';\nimport styles from './styles.scss';\n\nconst defaultGreeting = I18n.t('Thanks for talking with us');\nconst defaultMessage = I18n.t('If you have any other questions, just press the button below to start a new chat.');\n\nexport default class ChatFinished extends Component {\n\thandleClick = () => {\n\t\tconst { onRedirectChat } = this.props;\n\t\tonRedirectChat && onRedirectChat();\n\t}\n\n\trender = ({\n\t\tcolor,\n\t\ttitle,\n\t\tgreeting,\n\t\tmessage,\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tonRedirectChat,\n\t\t...props\n\t}) => (\n\t\t<Screen\n\t\t\tcolor={color}\n\t\t\ttitle={title}\n\t\t\tclassName={createClassName(styles, 'chat-finished')}\n\t\t\t{...props}\n\t\t>\n\t\t\t<Screen.Content>\n\t\t\t\t<p className={createClassName(styles, 'chat-finished__greeting')}>{greeting || defaultGreeting}</p>\n\t\t\t\t<p className={createClassName(styles, 'chat-finished__message')}>{message || defaultMessage}</p>\n\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button onClick={this.handleClick} stack>{ I18n.t('New Chat') }</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</Screen.Content>\n\t\t\t<Screen.Footer />\n\t\t</Screen>\n\t)\n}\n","import { h, Component } from 'preact';\nimport { route } from 'preact-router';\n\nimport I18n from '../../i18n';\nimport { Consumer } from '../../store';\nimport ChatFinished from './component';\n\n\nexport class ChatFinishedContainer extends Component {\n\thandleRedirect = () => {\n\t\troute('/');\n\t}\n\n\trender = (props) => (\n\t\t<ChatFinished {...props} onRedirectChat={this.handleRedirect} />\n\t)\n}\n\n\nexport const ChatFinishedConnector = ({ ref, ...props }) => (\n\t<Consumer>\n\t\t{({\n\t\t\tconfig: {\n\t\t\t\tmessages: {\n\t\t\t\t\tconversationFinishedMessage: greeting,\n\t\t\t\t\tconversationFinishedText: message,\n\t\t\t\t} = {},\n\t\t\t\ttheme: {\n\t\t\t\t\tcolor,\n\t\t\t\t} = {},\n\t\t\t} = {},\n\t\t\tiframe: {\n\t\t\t\ttheme: {\n\t\t\t\t\tcolor: customColor,\n\t\t\t\t\tfontColor: customFontColor,\n\t\t\t\t\ticonColor: customIconColor,\n\t\t\t\t} = {},\n\t\t\t} = {},\n\t\t}) => (\n\t\t\t<ChatFinishedContainer\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t\ttheme={{\n\t\t\t\t\tcolor: customColor || color,\n\t\t\t\t\tfontColor: customFontColor,\n\t\t\t\t\ticonColor: customIconColor,\n\t\t\t\t}}\n\t\t\t\ttitle={I18n.t('Chat Finished')}\n\t\t\t\tgreeting={greeting}\n\t\t\t\tmessage={message}\n\t\t\t/>\n\t\t)}\n\t</Consumer>\n);\n\n\nexport default ChatFinishedConnector;\n","export { default as ChatFinished } from './component';\nexport { ChatFinishedContainer, ChatFinishedConnector } from './container';\nexport { default } from './container';\n"],"sourceRoot":""}